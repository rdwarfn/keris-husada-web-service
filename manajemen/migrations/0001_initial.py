# Generated by Django 2.2 on 2020-01-28 23:37

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import manajemen.manager
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('akademik', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='phone number')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Mahasiswa'), (2, 'Dosen'), (3, 'Admin')], verbose_name='user')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', manajemen.manager.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Angkatan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tahun', models.PositiveIntegerField(verbose_name='Tahun Angkatan')),
                ('semester', models.CharField(choices=[('Genap', 'Genap'), ('Ganjil', 'Ganjil')], max_length=6)),
            ],
            options={
                'verbose_name': 'Data angkatan',
                'verbose_name_plural': 'Angkatan',
            },
        ),
        migrations.CreateModel(
            name='Dosen',
            fields=[
                ('nidn', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='NIDN')),
                ('nama_lengkap', models.CharField(max_length=150)),
                ('jenis_kelamin', models.CharField(choices=[('L', 'Laki-laki'), ('P', 'Perempuan')], max_length=1)),
                ('tempat_lahir', models.CharField(blank=True, max_length=40, null=True)),
                ('tanggal_lahir', models.DateField(blank=True, null=True)),
                ('agama', models.CharField(choices=[('buddha', 'Buddha'), ('hindu', 'Hindu'), ('islam', 'Islam'), ('konghucu', 'Kong Hu Cu'), ('Kristen', (('katolik', 'Katolik'), ('protestan', 'Protestan')))], default='islam', max_length=9)),
                ('kewarganegaraan', models.CharField(choices=[('WNI', 'WNI'), ('WNA', 'WNA')], default='WNI', max_length=3)),
                ('alamat', models.TextField(blank=True, help_text='nama jalan, nomor rumah', null=True)),
                ('rt', models.PositiveSmallIntegerField(blank=True, help_text='rukun tetangga', null=True, verbose_name='RT')),
                ('rw', models.PositiveSmallIntegerField(blank=True, help_text='rukun warga', null=True, verbose_name='RW')),
                ('kelurahan', models.CharField(blank=True, max_length=30, null=True, verbose_name='Kelurahan / Desa')),
                ('kecamatan', models.CharField(blank=True, max_length=30, null=True)),
                ('kab_kota', models.CharField(blank=True, max_length=30, null=True, verbose_name='Kabupaten / Kota')),
                ('provinsi', models.CharField(blank=True, max_length=30, null=True)),
                ('kode_pos', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('perguruan_tinggi', models.CharField(max_length=50)),
                ('gelar_akademik', models.CharField(blank=True, max_length=30, null=True)),
                ('tahun_ijazah', models.PositiveSmallIntegerField(choices=[(2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037), (2038, 2038), (2039, 2039)], help_text='Format tahun', verbose_name='Tanggal Ijazah')),
                ('jenjang', models.CharField(choices=[('S3', 'S3'), ('S2', 'S2'), ('S1', 'S1')], max_length=2)),
                ('file_foto', models.ImageField(blank=True, upload_to='dosen/foto/')),
                ('status', models.CharField(choices=[('Aktif', 'Aktif'), ('Keluar', 'Keluar')], default='Aktif', max_length=6)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Alamat email')),
                ('nomor_handphone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='No. Handphone')),
                ('tanggal_masuk', models.DateField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(blank=True, editable=False)),
                ('dibuat_pada', models.DateTimeField(auto_now_add=True)),
                ('diperbarui_pada', models.DateTimeField(auto_now=True)),
                ('akun', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='akun_dosen', to=settings.AUTH_USER_MODEL)),
                ('program_studi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='program_studi_dosen', to='akademik.ProgramStudi')),
            ],
            options={
                'verbose_name_plural': 'Dosen',
                'ordering': ('nama_lengkap',),
            },
        ),
        migrations.CreateModel(
            name='Mahasiswa',
            fields=[
                ('nim', models.CharField(help_text='nomor induk mahasiswa', max_length=9, primary_key=True, serialize=False, verbose_name='NIM')),
                ('nama_lengkap', models.CharField(max_length=225)),
                ('jenis_kelamin', models.CharField(choices=[('L', 'Laki-laki'), ('P', 'Perempuan')], max_length=1)),
                ('gol_darah', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('O', 'O')], max_length=2, null=True)),
                ('kewarganegaraan', models.CharField(choices=[('WNI', 'WNI'), ('WNA', 'WNA')], default='WNI', max_length=3)),
                ('tempat_lahir', models.CharField(max_length=40)),
                ('tanggal_lahir', models.DateField()),
                ('agama', models.CharField(choices=[('buddha', 'Buddha'), ('hindu', 'Hindu'), ('islam', 'Islam'), ('konghucu', 'Kong Hu Cu'), ('Kristen', (('katolik', 'Katolik'), ('protestan', 'Protestan')))], default='islam', max_length=9)),
                ('alamat', models.TextField(blank=True, help_text='nama jalan, nomor rumah', null=True)),
                ('rt', models.PositiveSmallIntegerField(blank=True, help_text='rukun tetangga', null=True, verbose_name='RT')),
                ('rw', models.PositiveSmallIntegerField(blank=True, help_text='rukun warga', null=True, verbose_name='RW')),
                ('kelurahan', models.CharField(blank=True, max_length=30, null=True, verbose_name='Kelurahan / Desa')),
                ('kecamatan', models.CharField(blank=True, max_length=30, null=True)),
                ('kab_kota', models.CharField(blank=True, max_length=30, null=True, verbose_name='Kabupaten / Kota')),
                ('provinsi', models.CharField(blank=True, max_length=30, null=True)),
                ('kode_pos', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('nomor_telepon', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='No. Telp. Rumah', max_length=128, null=True, region=None)),
                ('nomor_handphone', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='No. Handphone', max_length=128, null=True, region=None)),
                ('ktp', models.CharField(blank=True, max_length=16, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('status_awal', models.CharField(choices=[('Baru', 'Baru'), ('Pindahan', 'Pindahan')], default='Baru', max_length=8)),
                ('tahun_semester_masuk', models.PositiveIntegerField(blank=True, choices=[('2016', ((2016, '2016 Genap'), (2016.5, '2016 Ganjil'))), ('2017', ((2017, '2017 Genap'), (2017.5, '2017 Ganjil'))), ('2018', ((2018, '2018 Genap'), (2018.5, '2018 Ganjil'))), ('2019', ((2019, '2019 Genap'), (2019.5, '2019 Ganjil'))), ('2020', ((2020, '2020 Genap'), (2020.5, '2020 Ganjil'))), ('2021', ((2021, '2021 Genap'), (2021.5, '2021 Ganjil'))), ('2022', ((2022, '2022 Genap'), (2022.5, '2022 Ganjil'))), ('2023', ((2023, '2023 Genap'), (2023.5, '2023 Ganjil'))), ('2024', ((2024, '2024 Genap'), (2024.5, '2024 Ganjil'))), ('2025', ((2025, '2025 Genap'), (2025.5, '2025 Ganjil'))), ('2026', ((2026, '2026 Genap'), (2026.5, '2026 Ganjil'))), ('2027', ((2027, '2027 Genap'), (2027.5, '2027 Ganjil'))), ('2028', ((2028, '2028 Genap'), (2028.5, '2028 Ganjil'))), ('2029', ((2029, '2029 Genap'), (2029.5, '2029 Ganjil'))), ('2030', ((2030, '2030 Genap'), (2030.5, '2030 Ganjil'))), ('2031', ((2031, '2031 Genap'), (2031.5, '2031 Ganjil'))), ('2032', ((2032, '2032 Genap'), (2032.5, '2032 Ganjil'))), ('2033', ((2033, '2033 Genap'), (2033.5, '2033 Ganjil'))), ('2034', ((2034, '2034 Genap'), (2034.5, '2034 Ganjil'))), ('2035', ((2035, '2035 Genap'), (2035.5, '2035 Ganjil'))), ('2036', ((2036, '2036 Genap'), (2036.5, '2036 Ganjil'))), ('2037', ((2037, '2037 Genap'), (2037.5, '2037 Ganjil'))), ('2038', ((2038, '2038 Genap'), (2038.5, '2038 Ganjil'))), ('2039', ((2039, '2039 Genap'), (2039.5, '2039 Ganjil')))], null=True)),
                ('tanggal_masuk', models.DateField()),
                ('status', models.CharField(choices=[('Aktif', 'Aktif'), ('Lulus', 'Lulus'), ('DO', 'Drop Out')], default='Aktif', max_length=5)),
                ('file_foto', models.ImageField(blank=True, upload_to='mahasiswa/foto/')),
                ('slug', models.SlugField(blank=True, editable=False)),
                ('dibuat_pada', models.DateTimeField(auto_now_add=True)),
                ('diperbarui_pada', models.DateTimeField(auto_now=True)),
                ('akun', models.OneToOneField(blank=True, help_text='digunakan untuk login SIA', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='akun_mahasiswa', to=settings.AUTH_USER_MODEL)),
                ('angkatan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manajemen.Angkatan')),
                ('program_studi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='program_studi_mahasiswa', to='akademik.ProgramStudi')),
            ],
            options={
                'verbose_name_plural': 'Mahasiswa',
            },
        ),
        migrations.CreateModel(
            name='ProfilPerguruanTinggi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, verbose_name='Status PT')),
                ('nama', models.CharField(default='Akademi Keperawatan Keris Husada', max_length=100, verbose_name='Perguruan Tinggi')),
                ('tanggal_berdiri', models.DateField(default=datetime.date(2001, 9, 28), verbose_name='Tanggal Berdiri')),
                ('no_sk', models.CharField(default='409DT2008', max_length=12, verbose_name='Nomor SK PT')),
                ('tanggal_sk', models.DateField(default=datetime.date(2008, 1, 21), verbose_name='Tanggal SK PT')),
                ('alamat', models.TextField(default='Jalan Yos Sudarso Komplek Marinir Cilandak')),
                ('kab_kota', models.CharField(default='Kota Jakarta Selatan', max_length=100, verbose_name='Kota/Kabupaten')),
                ('provinsi', models.CharField(default='D.K.I Jakarta', max_length=50)),
                ('pos', models.PositiveIntegerField(default=12560, verbose_name='Kode Post')),
                ('telepon', phonenumber_field.modelfields.PhoneNumberField(default='+02178845502', max_length=128, region=None)),
                ('fax', phonenumber_field.modelfields.PhoneNumberField(default='+02178845502', max_length=128, region=None)),
                ('email', models.EmailField(default='infor@akaperkerishusada.ac.id', max_length=254)),
                ('website', models.CharField(default='www.akperkerishusada.ac.id', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='TransaksiMahasiswa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transksi', models.CharField(choices=[('Aktif', 'Aktif'), ('Nonaktif', 'Nonaktif'), ('Cuti', 'Cuti'), ('DO', 'Drop-Out'), ('Lulus', 'Lulus'), ('Keluar', 'Keluar')], max_length=8)),
                ('priode_awal', models.DateField()),
                ('priode_akhir', models.DateField()),
                ('keterangan', models.TextField(blank=True, null=True)),
                ('dibuat_pada', models.DateTimeField(auto_now_add=True)),
                ('diperbarui_pada', models.DateTimeField(auto_now=True)),
                ('dibuat_oleh', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('diperbarui_oleh', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('mahasiswa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manajemen.Mahasiswa')),
            ],
        ),
        migrations.CreateModel(
            name='TransaksiDosen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transksi', models.CharField(choices=[('Cuti', 'Cuti'), ('Aktif', 'Aktif Mengajar'), ('Cuti', 'Cuti'), ('Studi', 'Studi Lanjut'), ('Tugas', 'Tugas di Instansi Lain'), ('Almarhum', 'Almarhum')], max_length=8)),
                ('priode_awal', models.DateField()),
                ('priode_akhir', models.DateField()),
                ('keterangan', models.TextField(blank=True, null=True)),
                ('diperbarui_pada', models.DateTimeField(auto_now=True)),
                ('dibuat_oleh', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('diperbarui_oleh', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dosen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manajemen.Dosen')),
            ],
        ),
        migrations.CreateModel(
            name='Orangtua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama_lengkap', models.CharField(max_length=225)),
                ('hubungan', models.CharField(choices=[('Ayah', 'Ayah'), ('Ibu', 'Ibu'), ('Lainnya', 'Lainnya')], help_text='Keterangan hubungan keluarga', max_length=7)),
                ('hubungan_lain', models.CharField(blank=True, help_text='Opsional. Tuliskan hubungan apabila memilih hubungan lainnya', max_length=225, null=True)),
                ('hp', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Nomor hp aktif', max_length=128, null=True, region=None)),
                ('pekerjaan', models.CharField(blank=True, help_text='e.g Wiraswasta, dan lain-lain.', max_length=225, null=True)),
                ('mahasiswa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manajemen.Mahasiswa')),
            ],
            options={
                'verbose_name_plural': 'Orang Tua/Wali',
            },
        ),
    ]
